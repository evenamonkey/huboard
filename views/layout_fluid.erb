<!DOCTYPE html>
<html>
	<head>
		<title><% yield_content :title %>Huboard</title>
		<link rel="shortcut icon" type="image/png" href="/img/favicon.png" />
		<% if @parameters[:socket_backend] %>
		<script src="<%= @parameters[:socket_backend] %>/socket.io/socket.io.js"></script>
		<script src="/scripts/modules/require.js"></script>
		<script>
			define("socket",function() {
return window.io ? io.connect("<%= @parameters[:socket_backend] %>?token=<%= encrypted_token %>
	") : null;
	});

		</script>
		<% else %>
		<script src="/scripts/modules/require.js"></script>
		<script>
			define("socket", function() {
				return null;
			});
		</script>
		<% end %>
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js" type="text/javascript" charset="utf-8"></script>
		<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.23/jquery-ui.min.js" type="text/javascript" charset="utf-8"></script>

		<!-- This is a special version of jQuery with RequireJS built-in -->
		<% if settings.environment.to_sym == :development  %>
		<!-- I know this is really bad to do -->
		<script src="/scripts/firebugx.js" type="text/javascript" charset="utf-8"></script>
		<script src="/scripts/jquery.ui.touch-punch.min.js"></script>
		<script src="/scripts/jquery.color.js" type="text/javascript" charset="utf-8"></script>
		<script src="/scripts/underscore.js" type="text/javascript" charset="utf-8"></script>
		<script src="/scripts/backbone.js" type="text/javascript" charset="utf-8"></script>
		<script src="/scripts/postal.min.js" type="text/javascript" charset="utf-8"></script>
		<script src="/scripts/module-loader.js"></script>

		<script src="/scripts/bootstrap/bootstrap.min.js"></script>
		<% else %>
		<script src="/scripts/application.min.js"></script>

		<% end %>

		<link rel="stylesheet" href="/css/bootstrap.min.css">
		<link rel="stylesheet" href="/css/main.min.css" type="text/css" media="screen" charset="utf-8">
		<link rel="stylesheet" href="/css/added.min.css" type="text/css" media="screen" charset="utf-8">
	</head>
	<body>
		
		<a href="https://github.com/ProjectMeniscus/meniscus"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png" alt="Fork me on GitHub"></a>

<div class="container">

    <div class="masthead">
        <h1>
            <img src="img/Meniscus-Logo-Small.png" />&nbsp;&nbsp;&nbsp;<a href="http://projectmeniscus.org" style="text-decoration: none;">Project Meniscus</a>
        </h1>
        
        <div class="navbar">
            <div class="navbar-inner">
                <div class="container">
                    <ul class="nav">
                        <li class="active"><a href="#">Home</a></li>
                        <li><a href="https://github.com/ProjectMeniscus/meniscus">Source Code</a></li>
                        <li><a href="https://github.com/ProjectMeniscus/meniscus/wiki">Wiki</a></li>
                        <li><a href="http://devops.rackspace.com/introducing-project-meniscus-the-python-event-cloud-logging-service.html">Articles</a></li>
                        <li><a href='https://groups.google.com/forum/#!forum/meniscus'>Group</a></li>
                        <li><a href='http://jenkins.projectmeniscus.org/job/Meniscus/'>
                            <img src='http://jenkins.projectmeniscus.org/job/Meniscus/badge/icon'></a>
                        </li>
                    </ul>
                </div>
            </div>
        </div><!-- /.navbar -->
    </div>

    <div>
        <h2 style="text-align: center;">A Better Focusing Lens for System and Application Events</h2>
        <h4>The Problem</h4>
        <p>Software systems produce events but often do so in non-uniform ways. A system may log information to a file in a grammar that requires comprehension to extract meaning from the output. A system may also send events to other systems in a structured manner such as REST. Other systems may event output events directly into a database for storage or pass them to a queue for distribution to interested consumers.
            <br /><br />In highly diverse, clustered environments like those seen in many <a href="http://openstack.org">OpenStack</a> deployments, the system event landscape can become complex, difficult to manage and over time become opaque to the point where events generated no longer provide value. The information in many of these events have definite business value, whether it be to meter a tenant or to communicate that a portion of the cluster has been damaged or degraded. Therefore, it’s imperative, despite the complexity of the event ecosystem, to capture this information in a standardized and scalable manner.</p>
        <a class="btn btn-large btn-primary" href="MeniscusOverview.html">See the animated overview</a>
    </div>

    <hr>

    <!-- Example row of columns -->
    <div class="row-fluid">
        <div class="span5">
            <h2>Design Goals</h2>
            <p>
                <ul>
                    <li>Stress the utilization of standards, of which there are many for this problem domain</li>
                    <li>Adhere to compliance rules related to system and application event logging</li>
                    <li>Support multiple tenants in secure isolation</li>
                    <li>Impact target installations as little as possible</li>
                    <li>Allow for direct application integration via a structured publication endpoint</li>
                    <li>Design for platform efficiency, durability and scalability</li>
                    <li>Provide administrators with text search capability of all events processed and stored for a given tenant</li>
                    <li>Provide well formed a set of API specifications for configuration and administration</li>
                    <li>Provide common sinks for already existing systems such as <a href="https://launchpad.net/ceilometer">Ceilometer</a></li>
                    <li>The architecture must be resilient to multiple failures</li>
                    <li>Must support end-to-end runtime mutability</li>
                </ul>
            </p>
        </div>
        <div class="span5">
            <h2>Technologies and Standards</h2>
            <p>
                <ul>
                    <li><a href="http://python.org">Python</a> allows us to better align with efforts in the <a href="http://openstack.org">OpenStack</a> community.</li>
                    <li><a href="http://cee.mitre.org/">Common Event Expression</a> (CEE) unifies event representation and classification by combining support for multiple event syntaxes and log protocols in a single event standard.</li>
                    <li><a href="http://www.syslog.org/">Syslog</a>, due to the proliferation of Syslog as a logging strategy, building on top of the latest proposed standard and supporting software will allow us to expose an already present wealth of system information and application events with minimal effort.</li>
                    <li><a href="http://www.rsyslog.com/">RSyslog</a>, given the number of production RFC implementations Rsyslog appears to be very complete and is recommended for implementation in this architecture.</li>
                    <li><a href="http://www.liblognorm.com/">Liblognorm</a> is written the C programming language. If maximum speed is required, it can be utilized for mapping unstructured events into structured data quickly.</li>
                </ul>
            </p>
        </div>
    </div>

    <div class="row-fluid">
        <div class="span10">
            <h2>Event Transport</h2>
            <p>Once configured, logging events may make it in to the logging system via a relay using one of two methodologies:</p>
            <p>
                <ul>
                    <li><h5>Structured:</h5> Some events may be structured (well formed with defined data fields). Structured events should require no extra normalization or mapping to be placed into storage. It's recommended that HTTP is used to describe this endpoint due to the soft transaction mechanics of the request/response life cycle, in addition to a host of other RESTful features that may be employed. This endpoint should allow for publication across a WAN.</li>
                    <li><h5>Unstructured:</h5> Some events may be unstructured (log lines). Unstructured events may require normalization and mapping into a common event expression data structure. Unstructured events should arrive via the Syslog protocol over TCP. This endpoint may be published to across a WAN.</li>
                </ul>
            </p>
            <h5>Stream Encryption</h5>
            <p>While expensive, efficient encryption prevents many malicious attack vectors that messages in transit may be subject to.
            Two standards are recommended for securing messages in transport: the Syslog TCP TLS specification and SSL via HTTPS.</p>
            <h5>Stream Compression</h5>
            <p>Compression may be enabled for more efficient utilization of network bandwidth. Rsyslog supports on the wire zlib compression which may be utilized. Many HTTP implementation also compression such as gzip or deflate.</p>
            <p>Utilization of these standards may be enabled by the tenant or by relays communicating to one another.</p>
        </div>
    </div>

    <p>&nbsp;</p>

    <div class="footer">
        <p>Project Meniscus is a <a href="http://rackspace.com">Rackspace</a> Open Source initiative that is licensed under the <a href="http://www.apache.org/licenses/LICENSE-2.0.html">Apache 2 License</a></p>
        <p>©2013 Rackspace, US Inc.</p>
    </div>

</div> <!-- /container -->
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		<!--
		<div id="wrapper">
					<div class="navbar navbar-static-top">
						<div class="navbar-inner">
							<div class="container-fluid">
								<a class="brand" href="/">huboard</a>
								<ul class="nav">
									<% yield_content :navigation %>
								</ul>
								<ul class="nav pull-right">
									<% yield_content :sub_navigation %>
									<li class="dropdown">
										<a href="#" class="dropdown-toggle" data-toggle="dropdown"><%= h @user.login %><b class='caret'></b></a>
										<ul class="dropdown-menu">
											<li>
												<a href="/logout">Logout</a>
											</li>
										</ul>
									</li>
								</ul>
							</div>
						</div>
					</div>
					<div class="container-fluid" id="main-stage">
						<div class="page-header-wrapper">
							<% yield_content :header %>
						</div>
						<div class="sidebar">
							<% yield_content :sidebar %>
						</div>
						<div class="content" id="content">
							<%= yield %>
						</div>
		
					</div>
					<div id="footer-pusher"></div>
				</div>-->
		
		
		<% yield_content :overlay %>
	</body>
	<script type="text/javascript">
		var _gaq = _gaq || [];
		_gaq.push(['_setAccount', 'UA-28313898-1']);
		_gaq.push(['_setDomainName', 'huboard.com']);
		_gaq.push(['_trackPageview']);

		(function() {
			var ga = document.createElement('script');
			ga.type = 'text/javascript';
			ga.async = true;
			ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
			var s = document.getElementsByTagName('script')[0];
			s.parentNode.insertBefore(ga, s);
		})();

	</script>
</html>